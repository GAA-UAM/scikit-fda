"""
Pairwise alignment
==================

Shows the usage of elastic registration to perform a pairwise alignment of
functional data.
"""

# Author: Pablo Marcos Manch√≥n
# License: MIT

# sphinx_gallery_thumbnail_number = 5


import fda
import matplotlib.pyplot as plt
import matplotlib.colors as clr
import numpy as np


###############################################################################
#
# EXAMPLE IN PROCESS
#
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#

fd = fda.datasets.make_multimodal_samples(n_samples=2, modes_location=[0.33,.66],
                                          random_state=1, start=0, mode_std=.01)

fd.plot()
plt.legend(['$f_1$', '$f_2$'])

###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#


fd0 = fd[0]
fd1 = fd[1]

# Aligns fd0 to fd1
fd_align = fda.registration.elastic_registration(fd0, fd1)


plt.figure()

fd_align.plot(label='$f_1 \\circ h $')
fd1.plot(label='$f_2$')

# Function without alignment
fd0.plot(color='C0', linestyle='--', label='$f_1$')


plt.legend()

###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#

# Warping to align fd0 to fd1
warping = fda.registration.elastic_registration_warping(fd0, fd1)


plt.figure()

warping.plot()

###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#


warping_inverse = fda.registration.invert_warping(warping)


plt.figure()

fd0.plot(label='$f_1$')
fd1.compose(warping_inverse).plot(label='$f_2 \\circ h^{-1}$')

# Function without alignment
fd1.plot(color='C1', linestyle='--', label='$f_2$')

plt.legend()


###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#



# Values of lambda
lambdas = np.linspace(0, .2, 20)

# Creation of a color gradient
cmap = clr.LinearSegmentedColormap.from_list('custom cmap', ['C1','C0'])
color = cmap(.2 + 3*lambdas)

plt.figure()

for lam, c in zip(lambdas, color):
    # Plots result of alignment
    fda.registration.elastic_registration(fd0, fd1, lam=lam).plot(color=c)




l1, = fd0.plot(color='C0', linewidth=2., label='$f_1$')
l2, = fd1.plot(color='C1', linewidth=2., label='$f_2$')

plt.legend(handles=[l1, l2])

###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#

plt.figure()

for lam, c in zip(lambdas, color):
    fda.registration.elastic_registration_warping(fd0, fd1, lam=lam).plot(color=c)

# Plots identity
t = np.linspace(0,1)
plt.plot(t,t,  color='C0', linestyle="--")


###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#

state = np.random.RandomState(0)

location1 = state.normal(loc=-.3, scale=.1, size=3)
fd = fda.datasets.make_multimodal_samples(n_samples=3, modes_location=location1,
                                          noise=.001 ,random_state=1)

location2 = state.normal(loc=.3, scale=.1, size=3)
fd1 = fda.datasets.make_multimodal_samples(n_samples=3, modes_location=location2,
                                           random_state=2)





plt.figure()

l1, *_ = fd.plot(color="C0", label="$f_i$")
l2, *_ = fd1.plot(color="C1", label="$g_i$")
plt.legend(handles=[l1, l2])

###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#


plt.figure()

fd_registered = fda.registration.elastic_registration(fd, fd1)

fd1.plot(color="C1", linestyle="--")
fd_registered.plot(color="C0")

plt.show()


###############################################################################
# We will use an example dataset synthetically generated by
# :func:`make_multimodal_samples <fda.datasets.make_multimodal_samples>`, wich
# in this case will be used to generate gaussian-like samples with a mode near
# to 0.
# Each sample will be shifted to align their modes to a reference point using
# the function :func:`landmark_shift <fda.registration.landmark_shift>`.
#
